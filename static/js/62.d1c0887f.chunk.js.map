{"version":3,"file":"static/js/62.d1c0887f.chunk.js","mappings":"uTAMaA,EAAO,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAC,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAX,IAAAA,MAAA,SAAAY,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAID,OAHzBZ,EAAEa,iBACIZ,EAAOD,EAAEc,cACPZ,EAAUD,EAAKc,SAASC,SAAxBd,MAAKC,EACgBD,EAAMe,MAAM,KAAIb,GAAAc,EAAAA,EAAAA,GAAAf,EAAA,GAAtCE,EAAMD,EAAA,GAAEE,EAAIF,EAAA,GAAIG,EAAEH,EAAA,GAAAM,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAGAO,EAAAA,EAAAA,GAAiB,CAAEd,OAAAA,EAAQC,KAAAA,EAAMC,GAAAA,IAAM,KAAD,GAAvDC,EAAQE,EAAAU,OAEEZ,EAASC,QACjBA,EAASD,EAASC,OACxBhB,GAAS4B,EAAAA,EAAAA,GAAqBZ,IAC9BhB,GAAS6B,EAAAA,EAAAA,IAAsB,CAAEjB,OAAAA,EAAQC,KAAAA,EAAMC,GAAAA,MAE/CgB,QAAQC,MACN,2DAEHd,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,SAEDa,QAAQC,MAAM,kCAAmCd,EAAAe,GAAMC,SAAS,yBAAAhB,EAAAiB,OAAA,GAAA5B,EAAA,mBAEnE,gBArBiB6B,GAAA,OAAAhC,EAAAiC,MAAA,KAAAC,UAAA,KAuBlB,OACEC,EAAAA,EAAAA,KAAA,QAAMC,SAAUrC,EAAasC,UAC3BF,EAAAA,EAAAA,KAACG,EAAAA,EAAW,CAAAD,UACVF,EAAAA,EAAAA,KAACI,EAAAA,EAAK,CACJC,YAAY,gBACZC,KAAK,WACLC,cACEP,EAAAA,EAAAA,KAACQ,EAAAA,EAAc,CAACC,SAAS,MAAKP,UAC5BF,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACC,KAAK,SAASC,QAAQ,YAAWV,SAAC,oBASxD,E,oBCjBA,EAtBkB,WAChB,IAAMW,GAAoBC,EAAAA,EAAAA,IAAYC,EAAAA,IAChCC,GAAoBF,EAAAA,EAAAA,IAAYG,EAAAA,IAChCC,GAAkBJ,EAAAA,EAAAA,IAAYK,EAAAA,IAEpC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,MAAO,CAAEC,cAAe,SAAUC,UAAW,SAAUtB,SAAA,EAChEF,EAAAA,EAAAA,KAACvC,EAAI,IACJuD,IAAqBhB,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,IAC5BP,IAAmBE,EAAAA,EAAAA,MAAA,KAAAlB,SAAA,CAAG,UAAQgB,KAC9BL,IAAsBG,IAAsBE,IAC3CE,EAAAA,EAAAA,MAAA,KAAAlB,SAAA,CAAG,sBACmB,KACpBF,EAAAA,EAAAA,KAAA,QAAMsB,MAAO,CAAEI,MAAO,UAAWC,WAAY,OAAQzB,SAClDW,SAMb,C","sources":["components/Form.js","pages/Converter.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { setConvertedCurrency } from '../redux/conversionSlice';\nimport { fetchExchangeCurrency } from '../redux/operations';\nimport { exchangeCurrency } from 'services/exchangeCurrency';\nimport { Button, FormControl, Input, InputAdornment } from '@mui/material';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const { value } = form.elements.currency;\n    const [amount, from, , to] = value.split(' ');\n\n    try {\n      const response = await exchangeCurrency({ amount, from, to });\n\n      if (response && response.result) {\n        const result = response.result;\n        dispatch(setConvertedCurrency(result));\n        dispatch(fetchExchangeCurrency({ amount, from, to }));\n      } else {\n        console.error(\n          'Error during currency exchange: Invalid response format'\n        );\n      }\n    } catch (error) {\n      console.error('Error during currency exchange:', error.message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl>\n        <Input\n          placeholder=\"15 USD in UAH\"\n          name=\"currency\"\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <Button type=\"submit\" variant=\"contained\">\n                Exchange\n              </Button>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n    </form>\n  );\n};\n","import {\n  selectConversionError,\n  selectConversionLoading,\n  selectConvertedCurrency,\n} from '../redux/selectors';\nimport { Form } from '../components/Form';\nimport { useSelector } from 'react-redux';\nimport { Loader } from '../components/Loader';\nimport { Container } from 'components/Styles/Styles';\n\nconst Converter = () => {\n  const convertedCurrency = useSelector(selectConvertedCurrency);\n  const conversionLoading = useSelector(selectConversionLoading);\n  const conversionError = useSelector(selectConversionError);\n\n  return (\n    <Container style={{ flexDirection: 'column', minHeight: '500px' }}>\n      <Form />\n      {conversionLoading && <Loader />}\n      {conversionError && <p>Error: {conversionError}</p>}\n      {convertedCurrency && !conversionLoading && !conversionError && (\n        <p>\n          Converted currency:{' '}\n          <span style={{ color: '#1976d2', fontWeight: '600' }}>\n            {convertedCurrency}\n          </span>\n        </p>\n      )}\n    </Container>\n  );\n};\n\nexport default Converter;\n"],"names":["Form","dispatch","useDispatch","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","e","form","value","_value$split","_value$split2","amount","from","to","response","result","_context","prev","next","preventDefault","currentTarget","elements","currency","split","_slicedToArray","exchangeCurrency","sent","setConvertedCurrency","fetchExchangeCurrency","console","error","t0","message","stop","_x","apply","arguments","_jsx","onSubmit","children","FormControl","Input","placeholder","name","endAdornment","InputAdornment","position","Button","type","variant","convertedCurrency","useSelector","selectConvertedCurrency","conversionLoading","selectConversionLoading","conversionError","selectConversionError","_jsxs","Container","style","flexDirection","minHeight","Loader","color","fontWeight"],"sourceRoot":""}